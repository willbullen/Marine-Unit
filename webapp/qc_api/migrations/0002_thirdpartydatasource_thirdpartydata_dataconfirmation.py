# Generated by Django 5.2.6 on 2025-09-30 10:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('qc_api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ThirdPartyDataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('source_type', models.CharField(choices=[('noaa', 'NOAA/NDBC'), ('copernicus', 'Copernicus Marine Service'), ('ukmo', 'UK Met Office'), ('manual', 'Manual Upload'), ('other', 'Other Source')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('api_endpoint', models.URLField(blank=True, help_text='API endpoint URL if applicable')),
                ('update_frequency', models.CharField(blank=True, help_text="e.g., 'hourly', 'daily'", max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('air_pressure', models.FloatField(blank=True, help_text='Air pressure in hPa', null=True)),
                ('air_temp', models.FloatField(blank=True, help_text='Air temperature in °C', null=True)),
                ('humidity', models.FloatField(blank=True, help_text='Humidity in %', null=True)),
                ('wind_speed', models.FloatField(blank=True, help_text='Wind speed in m/s', null=True)),
                ('wind_direction', models.FloatField(blank=True, help_text='Wind direction in degrees', null=True)),
                ('wave_height', models.FloatField(blank=True, help_text='Significant wave height (Hm0) in m', null=True)),
                ('wave_height_max', models.FloatField(blank=True, help_text='Maximum wave height in m', null=True)),
                ('wave_period', models.FloatField(blank=True, help_text='Wave period in s', null=True)),
                ('wave_direction', models.FloatField(blank=True, help_text='Wave direction in degrees', null=True)),
                ('sea_temp', models.FloatField(blank=True, help_text='Sea temperature in °C', null=True)),
                ('data_quality', models.CharField(blank=True, help_text='Quality flag from source', max_length=20)),
                ('raw_data', models.JSONField(blank=True, default=dict, help_text='Original raw data from source')),
                ('imported_at', models.DateTimeField(auto_now_add=True)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qc_api.buoystation')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qc_api.thirdpartydatasource')),
            ],
            options={
                'ordering': ['station', '-timestamp'],
                'indexes': [models.Index(fields=['station', 'timestamp'], name='qc_api_thir_station_febffd_idx'), models.Index(fields=['source', 'timestamp'], name='qc_api_thir_source__118441_idx')],
                'unique_together': {('station', 'source', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='DataConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('station_value', models.FloatField(blank=True, null=True)),
                ('station_qc_status', models.IntegerField(help_text='QC indicator from station data')),
                ('third_party_value', models.FloatField(blank=True, null=True)),
                ('difference', models.FloatField(blank=True, help_text='Absolute difference between values', null=True)),
                ('percent_difference', models.FloatField(blank=True, help_text='Percentage difference', null=True)),
                ('confirmation_status', models.CharField(choices=[('confirmed', 'Confirmed - Data matches within tolerance'), ('discrepancy', 'Discrepancy - Significant difference detected'), ('missing', 'Missing - No third-party data available'), ('pending', 'Pending - Awaiting confirmation')], default='pending', max_length=20)),
                ('tolerance_threshold', models.FloatField(help_text='Tolerance threshold used for comparison')),
                ('notes', models.TextField(blank=True)),
                ('confirmed_at', models.DateTimeField(auto_now_add=True)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qc_api.qcparameter')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qc_api.buoystation')),
                ('third_party_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='qc_api.thirdpartydatasource')),
            ],
            options={
                'ordering': ['station', '-timestamp', 'parameter'],
                'indexes': [models.Index(fields=['station', 'confirmation_status'], name='qc_api_data_station_3f95b4_idx'), models.Index(fields=['timestamp', 'confirmation_status'], name='qc_api_data_timesta_1d1b4a_idx')],
                'unique_together': {('station', 'timestamp', 'parameter')},
            },
        ),
    ]
